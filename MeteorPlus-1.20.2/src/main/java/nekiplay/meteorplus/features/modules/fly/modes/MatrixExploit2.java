package nekiplay.meteorplus.features.modules.fly.modes;

import meteordevelopment.meteorclient.events.world.TickEvent;
import meteordevelopment.meteorclient.utils.misc.Names;
import meteordevelopment.meteorclient.utils.player.FindItemResult;
import meteordevelopment.meteorclient.utils.player.InvUtils;
import net.minecraft.client.network.ClientPlayerEntity;
import net.minecraft.item.Items;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import nekiplay.meteorplus.features.modules.fly.FlyMode;
import nekiplay.meteorplus.features.modules.fly.FlyModes;
import nekiplay.meteorplus.utils.ElytraUtils;

public class MatrixExploit2 extends FlyMode {
	public MatrixExploit2() {
		super(FlyModes.Matrix_Exploit_2);
	}

	private int ticks = 0;
	private int slot = 0;
	@Override
	public void onActivate() {
		ticks = 0;
		FindItemResult r = InvUtils.find(Items.ELYTRA);
		if (!r.found()) {
			settings.error(Names.get(Items.ELYTRA) + " not found");
			settings.toggle();
		}
	}
	@Override
	public void onTickEventPre(TickEvent.Pre event) {
		ClientPlayerEntity player = mc.player;
		assert player != null;
		switch (ticks) {
			case 0: {
				FindItemResult elytra = InvUtils.find(Items.ELYTRA);
				slot = elytra.slot();
				InvUtils.move().from(slot).toArmor(2);
				//InvUtils.quickMove().fromArmor(slot).to(2);
				ticks++;
			}
			case 1: {
				if (mc.player.isOnGround())
					mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.OnGroundOnly(false));
				ticks++;
			}
			case 2: {
				if (mc.player.isOnGround())
					mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.OnGroundOnly(false));
				ticks++;
			}
			case 3: {
				ElytraUtils.startFly();
				ticks++;
			}
			case 4: {
				player.getAbilities().setFlySpeed(settings.speed.get().floatValue());
				mc.player.setVelocity(mc.player.getVelocity().x, 0.100000001490116, mc.player.getVelocity().z);
				ticks++;
			}
			case 5: {
				ElytraUtils.startFly();
				mc.player.setVelocity(mc.player.getVelocity().x, 0.100000001490116, mc.player.getVelocity().z);
				ticks++;
			}
			case 6: {
				InvUtils.move().fromArmor(2).to(slot);
				//InvUtils.quickMove().fromArmor(2).to(slot);
				mc.player.setVelocity(mc.player.getVelocity().x, 0.100000001490116, mc.player.getVelocity().z);
				ticks++;
			}
			default: {
				if (ticks >= 13 && ticks <= 16) {
					ticks++;
					mc.player.setVelocity(mc.player.getVelocity().x, -0.060000001490116, mc.player.getVelocity().z);
					player.getAbilities().setFlySpeed(settings.speed2.get().floatValue() - 0.1f);
				}
				else if (ticks <= 16) {
					ticks++;
					mc.player.setVelocity(mc.player.getVelocity().x, 0.100000001490116, mc.player.getVelocity().z);
					player.getAbilities().setFlySpeed(settings.speed2.get().floatValue());
				}
				else {
					ticks = 0;
				}
			}
		}
	}
}
